groups:
  - docker:
ssh_pwauth: True
disable_root: False
chpasswd:
  list: |
    root:password
  expire: False

users:
  - name: root
    passwd: ${PASSWD}
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: [adm, cdrom, sudo, dip, plugdev, lpadmin, lxd, sambashare, docker]
    home: /root
    shell: /bin/bash
    lock_passwd: False
    ssh_authorized_keys:
      - ${SSH}

package_update: true
package_upgrade: true
packages:
  # Update the apt package index and install packages needed to use the Docker and Kubernetes apt repositories over HTTPS
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg
  - lsb-release

cloud_init_modules:
 - migrator
 - seed_random
 - bootcmd
 - write-files
 - growpart
 - resizefs
 - disk_setup
 - mounts
 - set_hostname
 - update_hostname
 - update_etc_hosts
 - ca_certs
 - rsyslog
 - users-groups
 - final

cloud_config_modules: 
 - wireguard 
 - snap 
 - ubuntu_autoinstall 
 - ssh-import-id 
 - keyboard 
 - locale 
 - set-passwords 
 - grub-dpkg 
 - apt-pipelining 
 - apt-configure 
 - ubuntu-advantage 
 - ntp 
 - timezone "Asia/Jerusalem" 
 - disable-ec2-metadata 
 - runcmd 
 - byobu
 - ssh

cloud_final_modules:
 - package-update-upgrade-install
 - fan
 - landscape
 - lxd
 - ubuntu-drivers
 - write-files-deferred
 - puppet
 - chef
 - ansible
 - mcollective
 - salt-minion
 - reset_rmc
 - refresh_rmc_and_interface
 - rightscale_userdata
 - scripts-vendor
 - scripts-per-once
 - scripts-per-boot
 - scripts-per-instance
 - scripts-user
 - ssh-authkey-fingerprints
 - keys-to-console
 - install-hotplug
 - phone-home
 - final-message
 - power-state-change

runcmd:
 - sed -i 's/#PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config # Enable empty passwords for SSH
 - systemctl restart sshd # Restart SSH service to apply the changes
 - modprobe br_netfilter # Load br_netfilter module.
 - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg # Add Dockerâ€™s official GPG key
 - curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg # Download the Google Cloud public signing key:
 - echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null # set up the stable repository
 - echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list # Add the Kubernetes apt repository
 - apt-get update -y # Update apt package index
 - apt-get install -y docker-ce docker-ce-cli containerd.io kubelet kubeadm kubectl # Install Docker Engine, kubelet, kubeadm and kubectl 
 - apt-mark hold kubelet kubeadm kubectl # pin kubelet kubeadm kubectl version
 - sysctl --system # Reload settings from all system configuration files to take iptables configuration
